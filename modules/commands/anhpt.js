module.exports = {
    name: 'nhi_image',
    description: 'Ph√¢n t√≠ch ·∫£nh ng∆∞·ªùi d√πng g·ª≠i v√† ph·∫£n h·ªìi d·ªÖ th∆∞∆°ng',

    async execute(bot, message) {
        // Ki·ªÉm tra n·∫øu ng∆∞·ªùi d√πng ƒë√£ b·∫≠t l·ªánh "nhi on" ƒë·ªÉ k√≠ch ho·∫°t ch·ª©c nƒÉng ph√¢n t√≠ch ·∫£nh
        if (message.text.toLowerCase() === 'nhi on') {
            // Ki·ªÉm tra n·∫øu ng∆∞·ªùi d√πng g·ª≠i ·∫£nh
            if (message.image) {
                const imageUrl = message.image.url;  // L·∫•y URL ·∫£nh ƒë∆∞·ª£c g·ª≠i t·ª´ message

                try {
                    // G·ªçi API ph√¢n t√≠ch ·∫£nh (V√≠ d·ª• s·ª≠ d·ª•ng API ph√¢n t√≠ch ·∫£nh c·ªßa Google Vision ho·∫∑c d·ªãch v·ª• kh√°c)
                    const response = await fetch('https://your-image-analysis-api.com/analyze', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ imageUrl })  // G·ª≠i URL ·∫£nh ƒë·ªÉ ph√¢n t√≠ch
                    });
                    const result = await response.json();  // L·∫•y k·∫øt qu·∫£ t·ª´ API

                    // Gi·∫£ s·ª≠ API tr·∫£ v·ªÅ m·ªôt m√¥ t·∫£ ·∫£nh trong result.description
                    const description = result.description || 'Ch∆∞a th·ªÉ m√¥ t·∫£ ·∫£nh n√†y';

                    // T·∫°o c√¢u tr·∫£ l·ªùi d·ªÖ th∆∞∆°ng cho ng∆∞·ªùi d√πng
                    const responseMessage = `
                        √îi, nh√¨n n√†y! ü•∞
                        ${description}
                        C√≥ v·∫ª nh∆∞ ·∫£nh n√†y r·∫•t ƒë·∫∑c bi·ªát ƒë·∫•y! üòä
                        B·∫°n mu·ªën k·ªÉ th√™m v·ªÅ ·∫£nh n√†y kh√¥ng? Chia s·∫ª v·ªõi Nhi nh√©! üíñ
                    `;
                    
                    // G·ª≠i c√¢u tr·∫£ l·ªùi v·ªÅ nh√≥m n∆°i tin nh·∫Øn ƒë∆∞·ª£c g·ª≠i
                    bot.sendMessage(message.chat.id, responseMessage);  
                } catch (error) {
                    console.error('L·ªói ph√¢n t√≠ch ·∫£nh:', error);
                    bot.sendMessage(message.chat.id, 'Nhi kh√¥ng th·ªÉ ph√¢n t√≠ch ·∫£nh n√†y, nh∆∞ng c√≥ th·ªÉ th·ª≠ l·∫°i nh√©! üòÖ');
                }
            } else {
                bot.sendMessage(message.chat.id, 'Nhi ch∆∞a nh·∫≠n ƒë∆∞·ª£c ·∫£nh n√†o t·ª´ b·∫°n! G·ª≠i ·∫£nh th·ª≠ xem n√†o. üòä');
            }
        }
    }
};
