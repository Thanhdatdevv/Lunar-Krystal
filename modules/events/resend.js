const axios = require("axios");
const fs = require("fs");
const path = require("path");

module.exports.config = {
  name: "resend",
  eventType: ["message", "message_unsend"],
  version: "1.0.0",
  credits: "Dat Thanh",
  description: "G·ª≠i l·∫°i tin nh·∫Øn ƒë√£ thu h·ªìi"
};

let messageStore = {};

module.exports.handleEvent = async function ({ api, event }) {
  const { type, messageID, senderID, threadID, body, attachments } = event;

  // L∆∞u tin nh·∫Øn
  if (type === "message") {
    messageStore[messageID] = {
      body,
      attachments,
      senderID,
      threadID,
      timestamp: Date.now()
    };
    return;
  }

  // Khi tin nh·∫Øn b·ªã thu h·ªìi
  if (type === "message_unsend" && messageStore[messageID]) {
    const msg = messageStore[messageID];
    const name = await getUserName(api, msg.senderID);

    let resendText = `„Äé ùôçùôÄùôéùôÄùôâùòø „Äè\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
    resendText += `üë§ ùóßùó≤ÃÇùóª: ${name}\n`;
    resendText += `üïí ùó´ùóºùóÆÃÅ ùóüù®àÃÅùó∞: ${new Date().toLocaleTimeString()}\n`;
    resendText += `üìù ùó°ùóºÃ£ÃÇùó∂ ùóóùòÇùóªùó¥: ${msg.body || "Kh√¥ng c√≥ n·ªôi dung"}\n`;
    resendText += `\n¬ª ùô±ùöäÃ£ùöó ùöùùöûÃõùöòÃõÃâùöóùöê ùöãùöäÃ£ùöó ùö°ùöòÃÅùöä ùöïùöäÃÄ ùöùùöëùöòùöäÃÅùöù ùöäÃÄ üëÄ`;

    const files = [];

    if (msg.attachments.length > 0) {
      for (const item of msg.attachments) {
        try {
          const res = await axios.get(item.url, { responseType: "stream" });
          files.push(res.data);
        } catch (err) {
          console.log("Kh√¥ng th·ªÉ g·ª≠i l·∫°i t·ªáp:", err.message);
        }
      }
    }

    api.sendMessage({ body: resendText, attachment: files }, msg.threadID);
    delete messageStore[messageID];
  }
};

async function getUserName(api, userID) {
  try {
    const info = await api.getUserInfo(userID);
    return info[userID].name || "Ng∆∞·ªùi d√πng";
  } catch {
    return "Ng∆∞·ªùi d√πng";
  }
}
